passwd:
  users:
    - name: root
#      password_hash: "$6$bT.CKtOX$zUvsBWyE1qK3KUVIk.xyc24dQc605vigJgrti0YyjKpQ1yc6KmYUq8CL6FQ11UC3X45XNvNgJNWNzSaLb.mAq/"
      ssh_authorized_keys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRrv5XeKyECmRaG0a2NoovFWJJgP91/Xrcei2m5QNKkzpAcj7W2wJfM1n4qRAqwKKLJXeIWuLc+uoRLBVl2WyfKf5sQnGEWdommyubRYXi9EWSRf08XPNGntNKJRBqVLvYfg8PWFuqmhzKhgA2mT+kXcKlPtHvq60banc8gZHuPH+r7VSSsgOaBYPNvtIm3Tzzrgy3omXrgtWVUbCuYkdg2Q6y+tPM5W5EeeviqESsc1+hjQu5U3Qp/1emC+7dkLuBfuwb1VeMWcmp4v4juPc4T+aUMZLQ+xXqE3JofJP1g9ncgPKsdU6BKTcDzafhs3QswIB79El1QGZJDiMUHQ7D"
networkd:
  units:
    - name: static.network
      contents: |
        [Match]
        Name=eth0

        [Network]
        Address={{network}}.1{{item}}/24
        Gateway={{network}}.1
        DNS={{network}}.1
etcd:
  initial_cluster_state: new
  initial_cluster_token: {{env}}
  name: {{env}}{{item}}
  initial_advertise_peer_urls: http://{{network}}.1{{item}}:2380
  listen_peer_urls: http://{{network}}.1{{item}}:2380
  advertise_client_urls: http://{{network}}.1{{item}}:2379
  listen_client_urls: http://0.0.0.0:2379
  initial_cluster: {{env}}1=http://{{network}}.11:2380{% for number in range(2,vm_count+1) %},{{env}}{{number}}=http://{{network}}.1{{number}}:2380{% endfor %}

systemd:
  units:
    - name: etcd-member.service
      enabled: true
    - name: cluster-bootstrap.service
      enabled: true
      contents: |
        [Unit]
        Description=Cluster Bootstrap
        Requires=docker.service
        Requires=etcd-member.service
        After=docker.service
        After=etcd-member.service
        
        [Service]
        EnvironmentFile=-/etc/environment
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/opt/bin/bootstrap {{node_role}}
        
        [Install]
        WantedBy=multi-user.target
    - name: deploy.service
      enabled: true
      contents: |
        [Unit]
        Description=Docker Deployer
        Requires=docker.service
        Requires=cluster-bootstrap.service
        After=docker.service
        After=cluster-bootstrap.service
        
        [Service]
        EnvironmentFile=-/etc/environment
        Type=oneshot
        ExecStart=/opt/bin/docker-deploy
#        RemainAfterExit=yes
#TODO WebHook Trigger from Github -> Container
    - name: deploy.timer
      enabled: true
      contents: |
        [Unit]
        Description=Run Docker Deployer every 5 minutes
        Requires=deploy.service
        
        [Timer]
        OnUnitActiveSec=5min

        [Install]
        WantedBy=multi-user.target
#    - name: data.mount
#      enable: true
#      contents: |
#        [Unit]
#        Before=local-fs.target
#        [Mount]
#        What=/dev/xvdb
#        Where=/data
#        Type=ext4
#        [Install]
#        WantedBy=local-fs.target
#    - name: data2.mount
#      enable: true
#      contents: |
#        [Unit]
#        Before=local-fs.target
#        [Mount]
#        What=/dev/xvdc
#        Where=/data2
#        Type=ext4
#        [Install]
#        WantedBy=local-fs.target
locksmith:
  reboot_strategy: "etcd-lock"
#TODO? set numer of nodes allowed to rebot https://coreos.com/os/docs/latest/update-strategies.html
storage:
#  filesystems:
#    - name: data
#      mount:
#        device: /dev/xvdb
#        format: ext4
#        wipe_filesystem: false
#    - name: data2
#      mount:
#        device: /dev/xvdc
#        format: ext4
#        wipe_filesystem: false
  files:
    - filesystem: root
      path: /etc/custom-environment
      mode: 755
      contents:
        inline: |
          NODE_NUMBER={{item}}
          COREOS_PRIVATE_IPV4={{network}}.1{{item}}
          NODE_ROLE={{node_role}}
          SLACK_WEBHOOK_URL={{slack_webhook_url}}
          SLACK_CHANNEL={{slack_channel}}
          running_docker_stack_repo={{running_docker_stack_repo}}
          env={{env}}
    - filesystem: root
      path: /opt/bin/bootstrap
      mode: 755
      contents:
        inline: |
          {{lookup('file', '{{ role_path }}/files/bootstrap')|indent(width=10) }}
    - filesystem: root
      path: /opt/bin/join-swarm-cluster
      mode: 755
      contents:
        inline: |
          {{lookup('file', '{{ role_path }}/files/join-swarm-cluster')|indent(width=10) }}
    - filesystem: root
      path: /opt/bin/slack
      mode: 755
      contents:
        inline: |
          {{lookup('file', '{{ role_path }}/files/slack')|indent(width=10) }}
    - filesystem: root
      path: /opt/bin/docker-deploy
      mode: 755
      contents:
        inline: |
          {{lookup('file', '{{ role_path }}/files/docker-deploy')|indent(width=10) }}
